#!/usr/bin/env zsh

# cd to the directory that script is being executed and set configs_dir to directory
configs_dir=$( cd "$(dirname "$0")" ; pwd )
target="$configs_dir/.."
ignores_global=(README.md)

shared_configs_dir="$configs_dir/shared"
shared_config_ignores+=(
  $ignores_global
)

mac_configs_dir="$configs_dir/mac"
mac_configs_ignores+=(
  $ignores_global
  Karabiner
  defaults.sh
  override.sh
)

windows_configs_dir="$configs_dir/windows"

setEnv(){
  case "$(uname -s)" in
    CYGWIN*)
      export CYGWIN=winsymlinks:native
  esac
}

setEnv

ignored() {
  local elements="$2"
  # For each element
  # Note: Zsh specific expansion syntax
  # See http://stackoverflow.com/a/14693738
  for e in ${(P)${elements}[@]}; do
    # If the element matches the 1st arg
    if [[ "$e" == "$1" ]] then;
      return 1; #true, ignored
    fi
  done
  return 0 #false, not ignored
}

linkFiles(){
  local configs_dir="$1"
  local ignores_local="$2"
  # For each file in the configs_dir
  for file in $(ls "${configs_dir}"); do
    # Check if the file is in list of ignores
    ignored "$file" "$ignores_local"

    # If the file is ignored
    # Note: ($? gets the exit status of the previous command)
    if [ $? -eq 1 ]; then
      # Skip it
      continue
    fi

    # else
    printf "$configs_dir/$file => $target/.$file\n"
    # If the link exits
    if [[ -L "$target/.$file" ]]; then
      # Remove it
      rm "$target/.$file"
    fi
    # Link each file in the configs_dir to a '.' target file
    ln -s "$configs_dir/$file" "$target/.$file"
  done
}

linkFile(){
  local src="$1"
  local dest="$2"
  printf "$src => $dest\n"
  if [[ -L "$dest" ]]; then
    rm "$dest"
  fi
  ln -s "$src" "$dest"
}

linkFilesForOs() {
  echo "Link OS independent dotfiles"
  linkSharedFiles
  case "$(uname -s)" in
    "Darwin")
      echo "Darwin based environment detected"
      linkMacFiles;;
    "CYGWIN*")
      echo "Cygwin based environment detected"
      linkWindowFiles;;
  esac
}

setIntelliJConfig() {
  case "$(uname -s)" in
    "Darwin")
      echo idea.config.path=~/.IntelliJIdea/config  >> "/Applications/IntelliJ IDEA.app/Contents/bin/idea.properties";;
    "CYGWIN*")
      echo idea.config.path=~/.IntelliJIdea/config  >> "C:/Program Files (x86)/JetBrains/IntelliJ IDEA 2016.1/bin/idea.properties";;
  esac
}

linkSharedFiles() {
  linkFiles "$shared_configs_dir" "shared_config_ignores"
}

linkWindowFiles() {
  linkFiles "$windows_configs_dir" "ignores_global"
}

linkMacFiles() {
  linkFiles "$mac_configs_dir" "mac_configs_ignores"
  linkFile "$mac_configs_dir/Karabiner/private.xml" "$target/Library/Application Support/Karabiner/private.xml"
}

clean(){
  echo "TODO"
}

help(){
cat <<-EOF
  ln      Link files automatically based on OS
  si      Set IntelliJ config directory to ~/.IntelliJIdea based on OS
  ls      Link Shared dot files
  lm      Link Mac files
  lw      Link Windows files
  clean   TODO
EOF
}

process(){
  case "$1" in
    "ln")
      linkFilesForOs;;
    "si")
      setIntelliJConfig;;
    "ls")
      linkSharedFiles;;
    "lm")
      linkMacFiles;;
    "lw")
      linkWindowFiles;;
    "clean")
      clean;;
    "help")
      help;;
    *)
      echo "Not a valid argument"
      help;;
  esac
}

process "$@"
