#!/usr/bin/env zsh

# cd to the directory that script is being executed and set configs_dir to directory
configs_dir=$( cd "$(dirname "$0")" ; pwd )
target="$configs_dir/.."
ignores_global=(README.md)

shared_configs_dir="$configs_dir/shared"
shared_config_ignores+=($ignores_global)

mac_configs_dir="$configs_dir/mac"
mac_configs_ignores+=(
  $ignores_global 
  Karabiner 
  vimrc.bundles.oss 
  tmux.conf.oss 
  defaults.sh 
  override.sh
)

windows_configs_dir="$configs_dir/windows"

setEnv(){
  case "$(uname -s)" in
    CYGWIN*)
      export CYGWIN=winsymlinks:native
  esac
}

setEnv

ignored() {
  local elements="$2"
  # For each element
  # Note: Zsh specific expansion syntax
  # See http://stackoverflow.com/a/14693738
  for e in ${(P)${elements}[@]}; do 
    # If the element matches the 1st arg
    if [[ "$e" == "$1" ]] then;
      return 1; #true, ignored
    fi
  done
  return 0 #false, not ignored
}

linkFiles(){
  local configs_dir="$1"
  local ignores_local="$2"
  # For each file in the configs_dir
  for file in $(ls "${configs_dir}"); do
    # Check if the file is in list of ignores
    ignored "$file" "$ignores_local"

    # If the file is ignored 
    # Note: ($? gets the exit status of the previous command)
    if [ $? -eq 1 ]; then
      # Skip it 
      continue
    fi

    # else
    printf "$configs_dir/$file => $target/.$file\n"
    # If the link exits
    if [[ -L "$target/.$file" ]]; then 
      # Remove it
      rm "$target/.$file"
    fi
    # Link each file in the configs_dir to a '.' target file 
    ln -s "$configs_dir/$file" "$target/.$file"
  done
}

linkFile(){
  local src="$1"
  local dest="$2"
  printf "$src => $dest"
  if [[ -L "$dest" ]]; then
    rm "$dest"
  fi
  ln -s "$src" "$dest"
}

linkMacFiles() {
  linkFile "$mac_configs_dir/Karabiner/private.xml" "$target/Library/Application Support/Karabiner/private.xml"
  linkFile "$shared_configs_dir/ideavimrc" "$target/.ideavimrc"
}

clean(){
  echo "TODO"
}

help(){
cat <<-EOF
  ls      link shared dot files
  lm      link mac files 
  lw      link windows files
  clean   TODO
  help    help
EOF
}

process(){
  case "$1" in
    "ls")
      linkFiles "$shared_configs_dir" "shared_config_ignores";;
    "lm")
      linkFiles "$mac_configs_dir" "mac_configs_ignores"
      linkMacFiles;;
    "lw")
      linkFiles "$windows_configs_dir" "ignores_global";;
    "clean")
      clean;;
    "help")
      help;;
    *)
      echo "Not a valid argument"
      help;;
  esac
}

process "$@"
