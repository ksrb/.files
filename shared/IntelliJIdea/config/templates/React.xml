<templateSet group="React">
  <template name="imr" value="import React, { Component, PropTypes } from 'react';" description="Import React module" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rt" value="import React, { Component } from 'react';&#10;&#10;class $className$ extends Component {&#10;&#10;  render() {&#10;    return (&#10;      &lt;div&gt;&#10;        $END$&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;  &#10;}&#10;&#10;export default $className$;&#10;" description="Create React component using template" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rc" value="class $className$ extends Component {&#10;&#10;  render() {&#10;    return (&#10;      &lt;div&gt;&#10;        $END$&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;  &#10;}&#10;" description="Create React component" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sst" value="this.setState($END$);" description="Set state" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcons" value="constructor(props) {&#10;  super(props);&#10;  this.state = {$END$};&#10;}" description="React constructor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="false" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
  <template name="fc" value="import React, { FC } from 'react';&#10;&#10;const $TM_FILENAME_BASE$: FC = () =&gt; {&#10;  return (&#10;    &lt;div&gt;$END$&lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default $TM_FILENAME_BASE$;" description="Functional Component" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>