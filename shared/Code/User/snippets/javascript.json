{
	"log": {
		"prefix": "log",
		"body": [
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"imf": {
		"prefix": "imf",
		"body": [
			"import $1 from '$2';"
		],
		"description": "Import module from"
	},
	"im": {
		"prefix": "im",
		"body": [
			"import $1;"
		],
		"description": "Import module"
	},
	"imc": {
		"prefix": "imc",
		"body": [
			"import classnames from 'classnames';"
		],
		"description": "Import classnames"
	},
	// =============== React ===============
	"imr": {
		"prefix": "imr",
		"body": [
			"import React, { Component, Proptypes } from 'react';"
		],
		"description": "Import React module"
	},
	"rcons": {
		"prefix": "rcons",
		"body": [
			"constructor(props) {",
			"  super(props);",
			"  this.state = {$0};",
			"}"
		],
		"description": "React constructor"
	},
	"sst": {
		"prefix": "sst",
		"body": [
			"this.setState($0);"
		],
		"description": "Set state"
	},
	"rc": { // TODO: wip no abililty to trim extension and capitalize file name
		"prefix": "rc",
		"body": [
			"class RenameMe extends Component {",
			"  render(){",
			"    return (",
			"      <div>$0</div>",
			"   );",
			"  }",
			"}",
			""
		],
		"description": "React component"
	},
	"rt": { // TODO: wip no abililty to trim extension and capitalize file name
		"prefix": "rt",
		"body": [
			"import React, { Component, PropTypes } from 'react';",
			"",
			"class RenameMe extends Component {",
			"  render(){",
			"    return (",
			"      <div>$0</div>",
			"   );",
			"  }",
			"}",
			"",
			"export default RenameMe;"
		],
		"description": "React template - for new file that is a react component"
	},
	// =============== React life cycle ===============
	"cwm": {
		"prefix": "cwm",
		"body": [
			"componentWillMount() {",
			"  $0",
			"}"
		],
		"description": "Component will mount"
	},
	"cwu": {
		"prefix": "cwu",
		"body": [
			"componentWillUpdate() {",
			"  $0",
			"}"
		],
		"description": "Component will update"
	},
	"cdu": {
		"prefix": "cdu",
		"body": [
			"componentDidUpdate(prevProps, prevState) {",
			"  $0",
			"}"
		],
		"description": "Component did update"
	},
	"cwum": {
		"prefix": "cwum",
		"body": [
			"componentWillUnmount() {",
			"  $0",
			"}"
		],
		"description": "Component will unmount"
	},
	"cdm": {
		"prefix": "cdm",
		"body": [
			"componentDidMount() {",
			"  $0",
			"}"
		],
		"description": "Component did mount"
	},
	"scu": {
		"prefix": "scu",
		"body": [
			"shouldComponentUpdate(nextProps, nextState) {",
			"  $0",
			"}"
		],
		"description": "Should component update"
	},
	"cwrp": {
		"prefix": "cwrp",
		"body": [
			"componentWillRecieveProps(nextProps) {",
			"  $0",
			"}"
		],
		"description": "Component will reciever props"
	}
}
