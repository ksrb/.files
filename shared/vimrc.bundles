runtime macros/matchit.vim

call plug#begin('~/.vim/plugged')

" Gui
Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ksrb/base16-vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Code
Plug 'SirVer/ultisnips'
Plug 'alvan/vim-closetag'
Plug 'jiangmiao/auto-pairs'
Plug 'ksrb/vim-javascript-es6-snippets'
Plug 'majutsushi/tagbar'
Plug 'sheerun/vim-polyglot'
Plug 'z0mbix/vim-shfmt', { 'for': 'sh' }

" Git
Plug 'tpope/vim-fugitive'

" Misc
Plug 'bronson/vim-visual-star-search'
Plug 'easymotion/vim-easymotion'
Plug 'kien/ctrlp.vim'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

" ctrlP {
    " ignore node_modules|.git folders
    let g:ctrlp_custom_ignore = '\v[\/](node_modules)|(\.(git))$'
    " Set working dir to first folder with .git or folder which file ctrlp was called on
    let g:ctrlp_working_path_mode = 'ra'
    " Jump to a file if it's open already
    let g:ctrlp_switch_buffer = 'et'
    " Number of recently opened files
    let g:ctrlp_mruf_max = 450
    " Do not limit the number of searchable files
    let g:ctrlp_max_files = 0

    " From: https://elliotekj.com/2016/11/22/setup-ctrlp-to-use-ripgrep-in-vim
    if executable('rg')
      " From: https://github.com/BurntSushi/ripgrep/issues/425#issuecomment-381446152
      set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case

      let g:ctrlp_user_command = 'rg %s
            \ --files
            \ --color=never
            \ --hidden
            \ --glob "!node_modules/*"
            \ --glob "!.git/*"'

      let g:ctrlp_use_caching = 0
    endif
" }

" nerdtree {
    noremap <Leader>n :NERDTreeToggle<cr>
" }

" vim-airline {
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
" }

" tagbar {
    nnoremap <Leader>t :TagbarToggle<cr>
" }

" tcomment {
    " Turn off leader key shortcuts
    let g:tcomment_mapleader2 = ''
" }

" vim-gitgutter {
    set updatetime=100
" }

" vim-indent-guides {
    let g:indent_guides_auto_colors = 0
    let g:indent_guides_enable_on_vim_startup = 1
    " https://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=235
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=00
" }

" vim-surround {
    " Turn off autoindent after surround motion
    let g:surround_indent = 0
" }

" vim-closetag {
    let g:closetag_close_shortcut = ''
    let g:closetag_filenames = '*.html,*.js'
"}

" vim-shfmt {
    let g:shfmt_extra_args = '-i 2'
    let g:shfmt_fmt_on_save = 1
" }

" OS Specific settings
if filereadable(expand("~/.vimrc.bundles.oss"))
  source ~/.vimrc.bundles.oss
endif

" Local settings
if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()

" Color Schema {
    let base16colorspace = 256
    colorscheme base16-eighties
" }
