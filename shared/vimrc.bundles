runtime macros/matchit.vim

call plug#begin('~/.config/nvim/plugged')

" Gui
Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ksrb/base16-vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Code
Plug 'SirVer/ultisnips'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'jiangmiao/auto-pairs'
Plug 'ksrb/vim-javascript-es6-snippets'
Plug 'majutsushi/tagbar'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/syntastic'
Plug 'sheerun/vim-polyglot'
Plug 'uarun/vim-protobuf'

" Git
Plug 'tpope/vim-fugitive'

" Misc
Plug 'bronson/vim-visual-star-search'
Plug 'easymotion/vim-easymotion'
Plug 'kien/ctrlp.vim'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

" ctrlP {
    let g:ctrlp_custom_ignore = '\v[\/](jspm_packages|node_modules)|(\.(git|hg|svn))$' " ignore jspm_packages|node_modules|.git|.hg|.svn folders
    let g:ctrlp_working_path_mode = 'ra'                                               " Set working dir to first folder with .git or folder which file ctrlp was called on
    let g:ctrlp_switch_buffer = 'et'                                                   " Jump to a file if it's open already
    let g:ctrlp_mruf_max = 450                                                         " Number of recently opened files
    let g:ctrlp_max_files = 0                                                          " Do not limit the number of searchable files

    " Use The Silver Searcher
    " From: https://github.com/ggreer/the_silver_searcher
    if executable('ag')
      " Use Ag over Grep
      set grepprg=ag\ --nogroup\ --nocolor
      " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
      let g:ctrlp_user_command = 'ag %s
            \ -l
            \ --nocolor
            \ --hidden
            \ --ignore ".*"
            \ --ignore ".git"
            \ --ignore ".hg"
            \ --ignore ".svn"
            \ --ignore "/node_modules"
            \ -g ""'
      " ag is fast enough that CtrlP doesn't need to cache
      let g:ctrlp_use_caching = 0
    endif
" }

" nerdtree {
    noremap <Leader>n :NERDTreeToggle<cr>
" }

" vim-airline {
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
" }

" syntastic {
    let g:syntastic_javascript_checkers = ['eslint']
" }

" tagbar {
    nnoremap <Leader>t :TagbarToggle<cr>
" }

" tcomment {
    " Turn off leader key shortcuts
    let g:tcommentMapLeader2 = ''
" }

" vim-go {
    let g:go_fmt_command = "goimports"
    let g:go_highlight_fields = 1
    let g:go_highlight_functions = 1
    let g:go_highlight_methods = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_structs = 1

    " Find reference
    au FileType go nmap <F2> <Plug>(go-doc-vertical)
    " Go to source
    au FileType go nmap <F3> <Plug>(go-def-vertical)
" }

" vim-gitgutter {
    set updatetime=100
" }

" vim-indent-guides {
    let g:indent_guides_auto_colors = 0
    let g:indent_guides_enable_on_vim_startup = 1
    " https://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=235
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=00
" }

" vim-surround {
    " Turn off autoindent after surround motion
    let g:surround_indent = 0
" }

" vim-jsx {
    " Allow jsx syntax highlighting and formatting to work in js files
    let g:jsx_ext_required = 0
" }

" vim-polyglot {
    let g:polyglot_disabled = ['js', 'jsx', 'go']
" }

" OS Specific settings
if filereadable(expand("~/.config/nvim/vimrc.bundles.oss"))
  source ~/.config/nvim/vimrc.bundles.oss
endif

" Local settings
if filereadable(expand("~/.config/nvim/vimrc.bundles.local"))
  source ~/.config/nvim/vimrc.bundles.local
endif

call plug#end()

" Color Schema {
    let base16colorspace = 256
    colorscheme base16-eighties
" }
