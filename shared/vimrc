" Settings {
    if has("gui_running")
      set encoding=utf-8
    endif

    set nocompatible          " Use Vim settings, over Vi settings, has side effects must be set as early as possible
    set ttyfast               " Fast terminal connecion improves responsiveness

    syntax sync minlines=256  " Start parsing for syntax highlighting 256 lines before buffer
    set synmaxcol=150         " Stop syntax higlighting after 150 cols

    set exrc                  " Allow local (./) specific vimrc
    set secure                " Disable unsafe commands in local .vimrc files

    set completeopt=menu      " Show completion options as dropdown list
    set relativenumber        " Show line numbers relative to cursor
    set number                " Show line numbers
    set colorcolumn=80        " Color the 80th column (max line width for code)
    set ruler                 " Show the cursor position all the time
    set nowrap                " Prevent word wrapping on long lines
    set incsearch             " Shows the match while typing
    set hlsearch              " Highlight found searches
    set ic                    " Case insensitive search
    set smartcase             " Only do case sensitive searching when there is a capitalized letter
    set laststatus=2          " Always display the status line
    set showmode              " Show the current mode
    set nocursorcolumn        " Speed up syntax highlighting
    set nocursorline          " Don't highlight line cursor is on

    set history=50            " Search and command history to 50
    set nobackup              " Don't create a backup file before overwriting
    set nowritebackup         " Don't create a backup before writing
    set noswapfile            " http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
    set showcmd               " Display incomplete commands
    set autowrite             " Automatically :write before running commands
    set mouse=a               " Enable mouse use in all modes
    set splitbelow            " Horizontal splits with open to the bottom
    set splitright            " Vertical splits with open to the right
    set timeoutlen=1000       " Wait 1s for followup keys after entering a mapped key (<Leader>)
    set ttimeoutlen=0         " Don't Wait for follup keys after entering a keycodes (<ESC>)
    set iminsert=0            " Disable capslock
    set backspace=2           " Backspace deletes like most programs in insert mode

    set tabstop=2             " Use 2 spaces for tabs
    set shiftwidth=2          " >>, << to use 2 spaces
    set shiftround            " Round indent to multiple of 'shiftwidth'
    set expandtab             " Insert spaces when tab is pressed
" }

" Wildmenu {
    set wildmenu
    set wildmode=list:longest
    set wildmode=list:full
    set wildignore+=*.hg,*.git,*.svn                " Version control
    set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg  " Binary images
    set wildignore+=*.DS_Store                      " OSX file
" }

" FileType {
    " Load filetype specific plugins + indentation settings + turn on filetype feature
    filetype plugin indent on

    au FileType gitcommit setlocal spell
    au FileType gitconfig setlocal noexpandtab
    au FileType make setlocal noexpandtab

    au BufNewFile,BufRead .eslintrc set filetype=json
" }

" Misc {
    " Move quickfix window to the bottom
    autocmd FileType qf wincmd J
" }

" Bindings {
    " Leader key to ','
    let mapleader = "\<SPACE>"

    " Strip Trailing Whitespace & turn off hightlighting
    nnoremap <Leader>kw :%s/\s\+$//e<CR>:noh<CR>

    " Redraw screen
    noremap <F5> :redraw!<CR>

    " Disable Ex mode binding
    nnoremap Q <nop>

    " Switch buffers quickly
    " Can't use C-M-h/l see: https://vi.stackexchange.com/a/4291
    nnoremap <Leader><C-h> :bp<CR>
    nnoremap <Leader><C-l> :bn<CR>
" }

if has("nvim")
  " Bindings {
      " Allow split switching using C-h/j/k/k in terminal
      tnoremap <C-h> <C-\><C-n><C-w>h
      tnoremap <C-j> <C-\><C-n><C-w>j
      tnoremap <C-k> <C-\><C-n><C-w>k
      tnoremap <C-l> <C-\><C-n><C-w>l

      " Use Ctrl+hjkl to switch buffers while in terminal mode
      nnoremap <C-M-h> :bp <CR>
      nnoremap <C-M-l> :bn <CR>
  " }
endif

if exists("g:vscode") " If vscode
  " Bindings {
      " tcomment substitue
      xmap gc  <Plug>VSCodeCommentary
      nmap gc  <Plug>VSCodeCommentary
      omap gc  <Plug>VSCodeCommentary
      nmap gcc <Plug>VSCodeCommentaryLine

      " Navigate windows quickly
      nnoremap <silent> <C-h> <Cmd>call VSCodeCall("workbench.action.navigateLeft")<CR>
      nnoremap <silent> <C-j> <Cmd>call VSCodeCall("workbench.action.navigateDown")<CR>
      nnoremap <silent> <C-k> <Cmd>call VSCodeCall("workbench.action.navigateUp")<CR>
      nnoremap <silent> <C-l> <Cmd>call VSCodeCall("workbench.action.navigateRight")<CR>

      " C-w
      nnoremap <silent> <C-w>H <Cmd>call VSCodeCall("workbench.action.moveEditorToPreviousGroup")<CR>
      nnoremap <silent> <C-w>L <Cmd>call VSCodeCall("workbench.action.moveEditorToNextGroup")<CR>

      " Leader
      nnoremap <silent> <Leader><C-f> <Cmd>call VSCodeCall("actions.find")<CR>
      " TODO: C-g Being overridden
      nnoremap <silent> <Leader><C-g> <Cmd>call VSCodeCall("editor.action.referenceSearch.trigger")<CR>
      nnoremap <silent> <Leader><C-h> <Cmd>call VSCodeCall("workbench.view.search")<CR>
      nnoremap <silent> <Leader>co <Cmd>call VSCodeCall("workbench.action.closeOtherEditors")<CR>
      nnoremap <silent> <Leader>fp <Cmd>call VSCodeCall("editor.action.formatDocument")<CR>
      nnoremap <silent> <Leader>pp <Cmd>call VSCodeCall("workbench.action.openRecent")<CR>
      nnoremap <silent> <Leader>r <Cmd>call VSCodeCall("workbench.action.files.revert")<CR>
      nnoremap <silent> <Leader>sa <Cmd>call VSCodeCall("workbench.action.files.saveAll")<CR>
  " }
endif

" Load plugins
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" OS specific config
if filereadable(expand("~/.vimrc.oss"))
  source ~/.vimrc.oss
endif

" Local config
if filereadable(expand("/.vimrc.local"))
  source ~/.vimrc.local
endif
