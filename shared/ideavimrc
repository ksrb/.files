set clipboard+=ideaput  " Use IntelliJ to put lines (will auto-import dependencies based on what was copied)
set highlightedyank     " Highlight yanked area
set hlsearch            " Highlight searched
set ic                  " Case insensitive search
set ideajoin            " Use IntelliJ to join lines (<C-j>)
set incsearch           " Progressive highlighting while searching
set matchit             " matchit emulation
set noerrorbells        " Disable system beep see https://superuser.com/a/677312
set number              " Show line numbers
set relativenumber      " Show line numbers relative to cursor
set smartcase           " Only do case sensitive searching when there is a capitalized letter
set surround            " vim-surround emulation
set visualbell          " Disable system beep see https://superuser.com/a/677312

let g:highlightedyank_highlight_color = "rgba(250, 240, 170, 123)"

" tcomment like comment command
nnoremap gcc :action CommentByLineComment<CR>

nnoremap gqq :action com.andrewbrookins.idea.wrap.WrapAction<CR>
nnoremap gh :action ShowErrorDescription<CR>

" Ctrl + hjkl to switch splits
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Emulate window move behavior
nnoremap <C-w>L :action MoveEditorToOppositeTabGroup<CR>
nnoremap <C-w>H :action MoveEditorToOppositeTabGroup<CR>
nnoremap <C-w>D :action OpenEditorInOppositeTabGroup<CR>

nnoremap <C-c>pp :action ManageRecentProjects<CR>

let mapleader = " "

" For reference of available actions see:
" https://github.com/JetBrains/intellij-community/blob/master/platform/platform-resources-en/src/messages/ActionsBundle.properties
" Or use :actionlist [pattern] see:
" https://github.com/JetBrains/ideavim#executing-ide-actions

noremap <Leader>y "+y
noremap <Leader>p "+p

noremap <Leader><C-e> :action RecentFiles<CR>
noremap <Leader><C-f> :action Replace<CR>
noremap <Leader><C-g> :action FindUsages<CR>
noremap <Leader><C-h> :action FindInPath<CR>
noremap <Leader><C-r> :action ReplaceInPath<CR>
noremap <Leader><C-t> :action GotoImplementation<CR>
noremap <Leader>[{ :action EditorCodeBlockStart<CR>
noremap <Leader>]} :action EditorCodeBlockEnd<CR>
noremap <Leader>ch :action CloseAllToTheLeft<CR>
noremap <Leader>cl :action CloseAllToTheRight<CR>
noremap <Leader>co :action CloseAllEditorsButActive<CR>
noremap <Leader>ct :action CloseAllEditors<CR>
noremap <Leader>df :action ToggleDistractionFreeMode<CR>
noremap <Leader>n :action ActivateProjectToolWindow<CR>
noremap <Leader>r :action SynchronizeCurrentFile<CR>
noremap <Leader>rl :action GotoRelated<CR>
" Works but substitues character under cursor
" map <Leader>s :action SynchronizeCurrentFile<CR>
noremap <Leader>sa :action Synchronize<CR>
noremap <Leader>t :action ActivateStructureToolWindow<CR>
noremap <Leader>wl :action com.andrewbrookins.idea.wrap.WrapAction<CR>
noremap <Leader>wp :action com.andrewbrookins.idea.wrap.WrapParagraphAction<CR>
